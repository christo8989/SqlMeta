<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)packages\SqlMeta.1.0.5847.37675\lib\SqlMeta.dll" 
#><#@ assembly name="$(SolutionDir)packages\Dapper.1.42\lib\net45\Dapper.dll" 
#>
<#@ import namespace="SqlMeta.Data.Repositories" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@include file="Manager.tt"#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#@ output extension=".cs" #>
<#var extention = "tsGen";#>


<# 
    var dataRepo = new MetaRepository(manager.ConnectionString);
    var tables = dataRepo.GetTableInfo().Where(t=>!t.TableName.Contains("diagram")).ToList();
    var nameSpace = "EnterpriseCodeGeneration.SqlTableToCSharpClass";

foreach (var table in tables)
{
    manager.StartNewFile(String.Format("{0}.{1}", table.TableName, extention));
#>
	export class <#=table.TableName#>{
	<# foreach (SqlMeta.Data.Types.SqlColumnInfo column in table.Columns)
	{#>
	public <#=column.ColumnName#> = ko.observable<<#=Manager.GetJsTypeTypeFromSqlType(sqlType:column.DataType)#>>(null);
	<#}#>
}
	
<# manager.EndBlock(); #>

<#
}
#>

<# manager.Process(true); #>