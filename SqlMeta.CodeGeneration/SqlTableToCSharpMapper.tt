<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)packages\SqlMeta.1.0.5847.37675\lib\SqlMeta.dll" 
#><#@ assembly name="$(SolutionDir)packages\Dapper.1.42\lib\net45\Dapper.dll" 
#>
<#@ import namespace="SqlMeta.Data.Repositories" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@include file="Manager.tt"#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#@ output extension=".cs" #>
<#var extention = "cs";#>


<# 
    var dataRepo = new MetaRepository(manager.ConnectionString);
    var tables = dataRepo.GetTableInfo(schema:"Queuing").Where(t => !t.TableName.Contains("sysdiagram")).ToList();
    var nameSpace = "BPM.Queuing.Core.Contracts.DTO";

foreach (var table in tables)
{
	var strippedTblName = StripTableName(table.TableName);
    var interfacedTableName = String.Format("I{0}", strippedTblName);
    manager.StartNewFile(String.Format("{0}.{1}", interfacedTableName, extention));
    
#>
namespace <#=nameSpace#>
{
	using System;

	public interface <#=interfacedTableName#>
	{
	<# foreach (SqlMeta.Data.Types.SqlColumnInfo column in table.Columns)
	{#>
		<#=column.ColumnName#> = entity.<#=column.ColumnName#>,
	<#}#>
}
}
	
<# manager.EndBlock(); #>

<#
}
#>

<# manager.Process(true); #>

<#+

    public static string StripTableName(string input)
    {
        return input.Replace("tbl", string.Empty);
    }
#>